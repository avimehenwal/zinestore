rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      // allow read, write: if request.time < timestamp.date(2020, 9, 15);

      // principle of least privilage
      allow read, write: if false;
    }
    // readonly database
    match /readonly/{docID} {
      allow read: if true;
      allow write: if false;
    }
    // capture {userId}
    match /users/{userId} {
      allow read: if true;
      allow write: if (request.auth.uid == userId);
    }
    // allow only posts which are flagged visible and by a certain author
    match /posts/{postId} {
      allow read: if (resource.data.visibility == 'public') ||
        (resource.data.authorId == request.auth.uid);
      allow write: if (request.auth.uid == userId);
    }
    match /testCollection/{Id} {
      allow read: if true;
      allow write: if true;
    }
  }
}